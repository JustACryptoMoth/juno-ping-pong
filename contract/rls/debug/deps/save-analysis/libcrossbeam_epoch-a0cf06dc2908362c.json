{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1","program":"/Users/Jonathan/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=a0cf06dc2908362c","-C","extra-filename=-a0cf06dc2908362c","--out-dir","/Users/Jonathan/Documents/GitHub/juno-polls-contract/voting/rls/debug/deps","-L","dependency=/Users/Jonathan/Documents/GitHub/juno-polls-contract/voting/rls/debug/deps","--extern","cfg_if=/Users/Jonathan/Documents/GitHub/juno-polls-contract/voting/rls/debug/deps/libcfg_if-b4c553cbaba18ded.rmeta","--extern","const_fn=/Users/Jonathan/Documents/GitHub/juno-polls-contract/voting/rls/debug/deps/libconst_fn-13598a9fcf1d1724.dylib","--extern","crossbeam_utils=/Users/Jonathan/Documents/GitHub/juno-polls-contract/voting/rls/debug/deps/libcrossbeam_utils-0ec36df063293252.rmeta","--extern","lazy_static=/Users/Jonathan/Documents/GitHub/juno-polls-contract/voting/rls/debug/deps/liblazy_static-701a7f03e893148c.rmeta","--extern","memoffset=/Users/Jonathan/Documents/GitHub/juno-polls-contract/voting/rls/debug/deps/libmemoffset-6417e7491cc59526.rmeta","--extern","scopeguard=/Users/Jonathan/Documents/GitHub/juno-polls-contract/voting/rls/debug/deps/libscopeguard-e162165729eb7c48.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/Jonathan/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/Jonathan/Documents/GitHub/juno-polls-contract/voting/rls/debug/deps/libcrossbeam_epoch-a0cf06dc2908362c.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[2083722082101990107,0]},"crate_root":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src","external_crates":[{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7777094053559708767,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","num":2,"id":{"name":"core","disambiguator":[10550174156715778454,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8770346864682343241,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8196830942918118636,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12786826162718588903,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7262382603413566750,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12233289566066112318,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4998072162051350919,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14817392966914922723,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13537029249427453884,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16172866892641339196,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[18226255698322429307,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[12872472635654720224,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[15477836623066676988,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8883445751219211826,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[4189598673803333586,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","num":17,"id":{"name":"cfg_if","disambiguator":[14051682313894696593,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","num":18,"id":{"name":"const_fn","disambiguator":[9607783435960282865,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","num":19,"id":{"name":"crossbeam_utils","disambiguator":[10354775065933950335,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","num":20,"id":{"name":"lazy_static","disambiguator":[2138047805796034603,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","num":21,"id":{"name":"scopeguard","disambiguator":[840363116583998361,0]}},{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","num":22,"id":{"name":"memoffset","disambiguator":[3032910319013844296,0]}}],"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":0,"byte_end":3845,"line_start":1,"line_end":91,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3500,"byte_end":3509,"line_start":80,"line_end":80,"column_start":32,"column_end":41},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3511,"byte_end":3517,"line_start":80,"line_end":80,"column_start":43,"column_end":49},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":65},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3519,"byte_end":3537,"line_start":80,"line_end":80,"column_start":51,"column_end":69},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3539,"byte_end":3560,"line_start":80,"line_end":80,"column_start":71,"column_end":92},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":202},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3562,"byte_end":3567,"line_start":80,"line_end":80,"column_start":94,"column_end":99},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":198},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3569,"byte_end":3576,"line_start":80,"line_end":80,"column_start":101,"column_end":108},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":256},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3578,"byte_end":3584,"line_start":80,"line_end":80,"column_start":110,"column_end":116},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":327},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3621,"byte_end":3630,"line_start":81,"line_end":81,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":343},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3632,"byte_end":3643,"line_start":81,"line_end":81,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":456},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3676,"byte_end":3687,"line_start":82,"line_end":82,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3689,"byte_end":3694,"line_start":82,"line_end":82,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":838},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3802,"byte_end":3819,"line_start":89,"line_end":89,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":836},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3821,"byte_end":3830,"line_start":89,"line_end":89,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":834},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3832,"byte_end":3835,"line_start":89,"line_end":89,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":0,"byte_end":3845,"line_start":1,"line_end":91,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":310},{"krate":0,"index":353},{"krate":0,"index":390},{"krate":0,"index":410},{"krate":0,"index":462},{"krate":0,"index":603},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":820},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":851}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":2855,"byte_end":2926,"line_start":58,"line_end":58,"column_start":1,"column_end":72}},{"value":"allow(clippy :: match_like_matches_macro)","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/lib.rs","byte_start":3120,"byte_end":3163,"line_start":63,"line_end":63,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":65},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10918091,"byte_end":10918109,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareAndSetError { current, new }","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10918020,"byte_end":10918079,"line_start":28,"line_end":28,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":69},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10918239,"byte_end":10918246,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareAndSetError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":65},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10918158,"byte_end":10918230,"line_start":30,"line_end":30,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":70},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10918332,"byte_end":10918335,"line_start":34,"line_end":34,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareAndSetError::new","value":"P","parent":{"krate":0,"index":65},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10918268,"byte_end":10918323,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":76},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10919224,"byte_end":10919245,"line_start":57,"line_end":57,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10918654,"byte_end":10918706,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10918707,"byte_end":10918710,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10918711,"byte_end":10918802,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10918803,"byte_end":10918895,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10918896,"byte_end":10918899,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10918900,"byte_end":10918965,"line_start":51,"line_end":51,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10918966,"byte_end":10918969,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10918970,"byte_end":10919064,"line_start":53,"line_end":53,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10919065,"byte_end":10919091,"line_start":54,"line_end":54,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10919092,"byte_end":10919184,"line_start":55,"line_end":55,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10919185,"byte_end":10919213,"line_start":56,"line_end":56,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10919311,"byte_end":10919318,"line_start":59,"line_end":59,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10919252,"byte_end":10919303,"line_start":58,"line_end":58,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10919536,"byte_end":10919543,"line_start":65,"line_end":65,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10919344,"byte_end":10919392,"line_start":61,"line_end":61,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10919397,"byte_end":10919400,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10919405,"byte_end":10919498,"line_start":63,"line_end":63,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10919503,"byte_end":10919528,"line_start":64,"line_end":64,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":93},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921851,"byte_end":10921860,"line_start":138,"line_end":138,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10920878,"byte_end":10920925,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10920926,"byte_end":10920929,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10920930,"byte_end":10921028,"line_start":120,"line_end":120,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921029,"byte_end":10921124,"line_start":121,"line_end":121,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921125,"byte_end":10921187,"line_start":122,"line_end":122,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921188,"byte_end":10921191,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921192,"byte_end":10921284,"line_start":124,"line_end":124,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921285,"byte_end":10921384,"line_start":125,"line_end":125,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921385,"byte_end":10921485,"line_start":126,"line_end":126,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921486,"byte_end":10921508,"line_start":127,"line_end":127,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921509,"byte_end":10921512,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921513,"byte_end":10921606,"line_start":129,"line_end":129,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921607,"byte_end":10921678,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921679,"byte_end":10921682,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921683,"byte_end":10921690,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921691,"byte_end":10921721,"line_start":133,"line_end":133,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921722,"byte_end":10921753,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921754,"byte_end":10921757,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921758,"byte_end":10921832,"line_start":136,"line_end":136,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921833,"byte_end":10921840,"line_start":137,"line_end":137,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":94},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921907,"byte_end":10921912,"line_start":140,"line_end":140,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921867,"byte_end":10921896,"line_start":139,"line_end":139,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":95},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921966,"byte_end":10921970,"line_start":143,"line_end":143,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921926,"byte_end":10921956,"line_start":142,"line_end":142,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922122,"byte_end":10922126,"line_start":150,"line_end":150,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10921977,"byte_end":10922022,"line_start":145,"line_end":145,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922027,"byte_end":10922030,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922035,"byte_end":10922047,"line_start":147,"line_end":147,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922052,"byte_end":10922055,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922060,"byte_end":10922107,"line_start":149,"line_end":149,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922490,"byte_end":10922495,"line_start":159,"line_end":159,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922160,"byte_end":10922195,"line_start":152,"line_end":152,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922200,"byte_end":10922203,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922208,"byte_end":10922220,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922225,"byte_end":10922228,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922233,"byte_end":10922309,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922314,"byte_end":10922382,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922387,"byte_end":10922475,"line_start":158,"line_end":158,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922894,"byte_end":10922903,"line_start":169,"line_end":169,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922530,"byte_end":10922573,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922578,"byte_end":10922581,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922586,"byte_end":10922598,"line_start":163,"line_end":163,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922603,"byte_end":10922606,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922611,"byte_end":10922687,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922692,"byte_end":10922760,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922765,"byte_end":10922855,"line_start":167,"line_end":167,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922860,"byte_end":10922879,"line_start":168,"line_end":168,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10923316,"byte_end":10923320,"line_start":179,"line_end":179,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10922942,"byte_end":10922995,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10923000,"byte_end":10923003,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10923008,"byte_end":10923020,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10923025,"byte_end":10923028,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10923033,"byte_end":10923109,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10923114,"byte_end":10923182,"line_start":176,"line_end":176,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10923187,"byte_end":10923277,"line_start":177,"line_end":177,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10923282,"byte_end":10923301,"line_start":178,"line_end":178,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":127},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926295,"byte_end":10926301,"line_start":275,"line_end":275,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10925777,"byte_end":10925841,"line_start":266,"line_end":266,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10925842,"byte_end":10925845,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10925846,"byte_end":10925944,"line_start":268,"line_end":268,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10925945,"byte_end":10926042,"line_start":269,"line_end":269,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926043,"byte_end":10926114,"line_start":270,"line_end":270,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926115,"byte_end":10926118,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926119,"byte_end":10926199,"line_start":272,"line_end":272,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926200,"byte_end":10926203,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926204,"byte_end":10926283,"line_start":274,"line_end":274,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926787,"byte_end":10926790,"line_start":293,"line_end":293,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926554,"byte_end":10926636,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926641,"byte_end":10926644,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926649,"byte_end":10926663,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926668,"byte_end":10926671,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926676,"byte_end":10926683,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926688,"byte_end":10926720,"line_start":289,"line_end":289,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926725,"byte_end":10926728,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926733,"byte_end":10926763,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926768,"byte_end":10926775,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10927134,"byte_end":10927138,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926893,"byte_end":10926975,"line_start":299,"line_end":299,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926980,"byte_end":10926983,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926988,"byte_end":10927002,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10927007,"byte_end":10927010,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10927015,"byte_end":10927022,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10927027,"byte_end":10927059,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10927064,"byte_end":10927067,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10927072,"byte_end":10927110,"line_start":306,"line_end":306,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10927115,"byte_end":10927122,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10927687,"byte_end":10927691,"line_start":331,"line_end":331,"column_start":18,"column_end":22},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"cfg(not(feature = \"nightly\"))","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10927637,"byte_end":10927669,"line_start":330,"line_end":330,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928276,"byte_end":10928280,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10927818,"byte_end":10927863,"line_start":338,"line_end":338,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10927868,"byte_end":10927871,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10927876,"byte_end":10927966,"line_start":340,"line_end":340,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10927971,"byte_end":10927985,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10927990,"byte_end":10927993,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10927998,"byte_end":10928012,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928017,"byte_end":10928020,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928025,"byte_end":10928032,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928037,"byte_end":10928086,"line_start":346,"line_end":346,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928091,"byte_end":10928135,"line_start":347,"line_end":347,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928140,"byte_end":10928143,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928148,"byte_end":10928178,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928183,"byte_end":10928213,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928218,"byte_end":10928252,"line_start":351,"line_end":351,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928257,"byte_end":10928264,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929287,"byte_end":10929299,"line_start":378,"line_end":378,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928410,"byte_end":10928489,"line_start":357,"line_end":357,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928494,"byte_end":10928497,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928502,"byte_end":10928575,"line_start":359,"line_end":359,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928580,"byte_end":10928656,"line_start":360,"line_end":360,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928661,"byte_end":10928732,"line_start":361,"line_end":361,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928737,"byte_end":10928811,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928816,"byte_end":10928839,"line_start":363,"line_end":363,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928844,"byte_end":10928847,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928852,"byte_end":10928927,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10928932,"byte_end":10929006,"line_start":366,"line_end":366,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929011,"byte_end":10929045,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929050,"byte_end":10929053,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929058,"byte_end":10929072,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929077,"byte_end":10929080,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929085,"byte_end":10929092,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929097,"byte_end":10929146,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929151,"byte_end":10929154,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929159,"byte_end":10929189,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929194,"byte_end":10929224,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929229,"byte_end":10929263,"line_start":376,"line_end":376,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929268,"byte_end":10929275,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929907,"byte_end":10929912,"line_start":397,"line_end":397,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929419,"byte_end":10929484,"line_start":382,"line_end":382,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929489,"byte_end":10929492,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929497,"byte_end":10929587,"line_start":384,"line_end":384,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929592,"byte_end":10929606,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929611,"byte_end":10929614,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929619,"byte_end":10929633,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929638,"byte_end":10929641,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929646,"byte_end":10929653,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929658,"byte_end":10929707,"line_start":390,"line_end":390,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929712,"byte_end":10929756,"line_start":391,"line_end":391,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929761,"byte_end":10929764,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929769,"byte_end":10929799,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929804,"byte_end":10929840,"line_start":394,"line_end":394,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929845,"byte_end":10929883,"line_start":395,"line_end":395,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10929888,"byte_end":10929895,"line_start":396,"line_end":396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930562,"byte_end":10930566,"line_start":417,"line_end":417,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930019,"byte_end":10930107,"line_start":401,"line_end":401,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930112,"byte_end":10930125,"line_start":402,"line_end":402,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930130,"byte_end":10930133,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930138,"byte_end":10930228,"line_start":404,"line_end":404,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930233,"byte_end":10930247,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930252,"byte_end":10930255,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930260,"byte_end":10930274,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930279,"byte_end":10930282,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930287,"byte_end":10930294,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930299,"byte_end":10930356,"line_start":410,"line_end":410,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930361,"byte_end":10930405,"line_start":411,"line_end":411,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930410,"byte_end":10930413,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930418,"byte_end":10930448,"line_start":413,"line_end":413,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930453,"byte_end":10930483,"line_start":414,"line_end":414,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930488,"byte_end":10930538,"line_start":415,"line_end":415,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930543,"byte_end":10930550,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931833,"byte_end":10931848,"line_start":445,"line_end":445,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930737,"byte_end":10930833,"line_start":421,"line_end":421,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930838,"byte_end":10930932,"line_start":422,"line_end":422,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10930937,"byte_end":10931008,"line_start":423,"line_end":423,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931013,"byte_end":10931016,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931021,"byte_end":10931116,"line_start":425,"line_end":425,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931121,"byte_end":10931212,"line_start":426,"line_end":426,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931217,"byte_end":10931230,"line_start":427,"line_end":427,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931235,"byte_end":10931238,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931243,"byte_end":10931328,"line_start":429,"line_end":429,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931333,"byte_end":10931364,"line_start":430,"line_end":430,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931369,"byte_end":10931372,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931377,"byte_end":10931391,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931396,"byte_end":10931399,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931404,"byte_end":10931411,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931416,"byte_end":10931480,"line_start":435,"line_end":435,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931485,"byte_end":10931529,"line_start":436,"line_end":436,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931534,"byte_end":10931537,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931542,"byte_end":10931572,"line_start":438,"line_end":438,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931577,"byte_end":10931580,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931585,"byte_end":10931615,"line_start":440,"line_end":440,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931620,"byte_end":10931657,"line_start":441,"line_end":441,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931662,"byte_end":10931732,"line_start":442,"line_end":442,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931737,"byte_end":10931809,"line_start":443,"line_end":443,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10931814,"byte_end":10931821,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10934317,"byte_end":10934337,"line_start":514,"line_end":514,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10932517,"byte_end":10932613,"line_start":468,"line_end":468,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10932618,"byte_end":10932712,"line_start":469,"line_end":469,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10932717,"byte_end":10932788,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10932793,"byte_end":10932796,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10932801,"byte_end":10932895,"line_start":472,"line_end":472,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10932900,"byte_end":10932995,"line_start":473,"line_end":473,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933000,"byte_end":10933090,"line_start":474,"line_end":474,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933095,"byte_end":10933179,"line_start":475,"line_end":475,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933184,"byte_end":10933187,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933192,"byte_end":10933277,"line_start":477,"line_end":477,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933282,"byte_end":10933313,"line_start":478,"line_end":478,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933318,"byte_end":10933321,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933326,"byte_end":10933374,"line_start":480,"line_end":480,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933379,"byte_end":10933382,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933387,"byte_end":10933401,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933406,"byte_end":10933409,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933414,"byte_end":10933421,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933426,"byte_end":10933490,"line_start":485,"line_end":485,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933495,"byte_end":10933539,"line_start":486,"line_end":486,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933544,"byte_end":10933547,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933552,"byte_end":10933582,"line_start":488,"line_end":488,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933587,"byte_end":10933617,"line_start":489,"line_end":489,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933622,"byte_end":10933625,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933630,"byte_end":10933665,"line_start":491,"line_end":491,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933670,"byte_end":10933710,"line_start":492,"line_end":492,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933715,"byte_end":10933725,"line_start":493,"line_end":493,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933730,"byte_end":10933793,"line_start":494,"line_end":494,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933798,"byte_end":10933820,"line_start":495,"line_end":495,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933825,"byte_end":10933849,"line_start":496,"line_end":496,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933854,"byte_end":10933876,"line_start":497,"line_end":497,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933881,"byte_end":10933894,"line_start":498,"line_end":498,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933899,"byte_end":10933924,"line_start":499,"line_end":499,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933929,"byte_end":10933963,"line_start":500,"line_end":500,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10933968,"byte_end":10933998,"line_start":501,"line_end":501,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10934003,"byte_end":10934016,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10934021,"byte_end":10934030,"line_start":503,"line_end":503,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10934035,"byte_end":10934040,"line_start":504,"line_end":504,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10934045,"byte_end":10934048,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10934053,"byte_end":10934094,"line_start":506,"line_end":506,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10934099,"byte_end":10934109,"line_start":507,"line_end":507,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10934114,"byte_end":10934189,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10934194,"byte_end":10934221,"line_start":509,"line_end":509,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10934226,"byte_end":10934269,"line_start":510,"line_end":510,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10934274,"byte_end":10934283,"line_start":511,"line_end":511,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10934288,"byte_end":10934293,"line_start":512,"line_end":512,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10934298,"byte_end":10934305,"line_start":513,"line_end":513,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935742,"byte_end":10935751,"line_start":556,"line_end":556,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935011,"byte_end":10935050,"line_start":537,"line_end":537,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935055,"byte_end":10935058,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935063,"byte_end":10935157,"line_start":539,"line_end":539,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935162,"byte_end":10935218,"line_start":540,"line_end":540,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935223,"byte_end":10935226,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935231,"byte_end":10935321,"line_start":542,"line_end":542,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935326,"byte_end":10935340,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935345,"byte_end":10935348,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935353,"byte_end":10935367,"line_start":545,"line_end":545,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935372,"byte_end":10935375,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935380,"byte_end":10935387,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935392,"byte_end":10935449,"line_start":548,"line_end":548,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935454,"byte_end":10935498,"line_start":549,"line_end":549,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935503,"byte_end":10935506,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935511,"byte_end":10935571,"line_start":551,"line_end":551,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935576,"byte_end":10935606,"line_start":552,"line_end":552,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935611,"byte_end":10935666,"line_start":553,"line_end":553,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935671,"byte_end":10935718,"line_start":554,"line_end":554,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935723,"byte_end":10935730,"line_start":555,"line_end":555,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936650,"byte_end":10936658,"line_start":579,"line_end":579,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935922,"byte_end":10935960,"line_start":560,"line_end":560,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935965,"byte_end":10935968,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10935973,"byte_end":10936066,"line_start":562,"line_end":562,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936071,"byte_end":10936127,"line_start":563,"line_end":563,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936132,"byte_end":10936135,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936140,"byte_end":10936230,"line_start":565,"line_end":565,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936235,"byte_end":10936249,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936254,"byte_end":10936257,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936262,"byte_end":10936276,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936281,"byte_end":10936284,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936289,"byte_end":10936296,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936301,"byte_end":10936358,"line_start":571,"line_end":571,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936363,"byte_end":10936407,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936412,"byte_end":10936415,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936420,"byte_end":10936480,"line_start":574,"line_end":574,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936485,"byte_end":10936515,"line_start":575,"line_end":575,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936520,"byte_end":10936574,"line_start":576,"line_end":576,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936579,"byte_end":10936626,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936631,"byte_end":10936638,"line_start":578,"line_end":578,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937558,"byte_end":10937567,"line_start":602,"line_end":602,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936827,"byte_end":10936866,"line_start":583,"line_end":583,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936871,"byte_end":10936874,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936879,"byte_end":10936973,"line_start":585,"line_end":585,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10936978,"byte_end":10937034,"line_start":586,"line_end":586,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937039,"byte_end":10937042,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937047,"byte_end":10937137,"line_start":588,"line_end":588,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937142,"byte_end":10937156,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937161,"byte_end":10937164,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937169,"byte_end":10937183,"line_start":591,"line_end":591,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937188,"byte_end":10937191,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937196,"byte_end":10937203,"line_start":593,"line_end":593,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937208,"byte_end":10937265,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937270,"byte_end":10937314,"line_start":595,"line_end":595,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937319,"byte_end":10937322,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937327,"byte_end":10937387,"line_start":597,"line_end":597,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937392,"byte_end":10937422,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937427,"byte_end":10937482,"line_start":599,"line_end":599,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937487,"byte_end":10937534,"line_start":600,"line_end":600,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937539,"byte_end":10937546,"line_start":601,"line_end":601,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938864,"byte_end":10938874,"line_start":640,"line_end":640,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937737,"byte_end":10937772,"line_start":606,"line_end":606,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937777,"byte_end":10937780,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937785,"byte_end":10937874,"line_start":608,"line_end":608,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937879,"byte_end":10937965,"line_start":609,"line_end":609,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10937970,"byte_end":10938005,"line_start":610,"line_end":610,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938010,"byte_end":10938013,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938018,"byte_end":10938030,"line_start":612,"line_end":612,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938035,"byte_end":10938038,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938043,"byte_end":10938102,"line_start":614,"line_end":614,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938107,"byte_end":10938110,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938115,"byte_end":10938127,"line_start":616,"line_end":616,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938132,"byte_end":10938135,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938140,"byte_end":10938227,"line_start":618,"line_end":618,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938232,"byte_end":10938265,"line_start":619,"line_end":619,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938270,"byte_end":10938273,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938278,"byte_end":10938292,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938297,"byte_end":10938300,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938305,"byte_end":10938316,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938321,"byte_end":10938340,"line_start":624,"line_end":624,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938345,"byte_end":10938379,"line_start":625,"line_end":625,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938384,"byte_end":10938410,"line_start":626,"line_end":626,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938415,"byte_end":10938442,"line_start":627,"line_end":627,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938447,"byte_end":10938452,"line_start":628,"line_end":628,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938457,"byte_end":10938460,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938465,"byte_end":10938498,"line_start":630,"line_end":630,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938503,"byte_end":10938531,"line_start":631,"line_end":631,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938536,"byte_end":10938630,"line_start":632,"line_end":632,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938635,"byte_end":10938682,"line_start":633,"line_end":633,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938687,"byte_end":10938707,"line_start":634,"line_end":634,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938712,"byte_end":10938791,"line_start":635,"line_end":635,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938796,"byte_end":10938809,"line_start":636,"line_end":636,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938814,"byte_end":10938823,"line_start":637,"line_end":637,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938828,"byte_end":10938833,"line_start":638,"line_end":638,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938838,"byte_end":10938845,"line_start":639,"line_end":639,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":198},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10941505,"byte_end":10941512,"line_start":743,"line_end":743,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10941442,"byte_end":10941494,"line_start":742,"line_end":742,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10941604,"byte_end":10941614,"line_start":745,"line_end":745,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10941542,"byte_end":10941596,"line_start":744,"line_end":744,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10941921,"byte_end":10941931,"line_start":753,"line_end":753,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10941636,"byte_end":10941700,"line_start":747,"line_end":747,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10941705,"byte_end":10941708,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10941713,"byte_end":10941725,"line_start":749,"line_end":749,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10941730,"byte_end":10941733,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10941738,"byte_end":10941833,"line_start":751,"line_end":751,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10941838,"byte_end":10941906,"line_start":752,"line_end":752,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":202},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10942197,"byte_end":10942202,"line_start":762,"line_end":762,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10941957,"byte_end":10941992,"line_start":756,"line_end":756,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10941993,"byte_end":10941996,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10941997,"byte_end":10942039,"line_start":758,"line_end":758,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10942040,"byte_end":10942043,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10942044,"byte_end":10942142,"line_start":760,"line_end":760,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10942143,"byte_end":10942185,"line_start":761,"line_end":761,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943600,"byte_end":10943608,"line_start":813,"line_end":813,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10942852,"byte_end":10942902,"line_start":791,"line_end":791,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10942907,"byte_end":10942910,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10942915,"byte_end":10943007,"line_start":793,"line_end":793,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943012,"byte_end":10943105,"line_start":794,"line_end":794,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943110,"byte_end":10943135,"line_start":795,"line_end":795,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943140,"byte_end":10943143,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943148,"byte_end":10943160,"line_start":797,"line_end":797,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943165,"byte_end":10943168,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943173,"byte_end":10943217,"line_start":799,"line_end":799,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943222,"byte_end":10943225,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943230,"byte_end":10943242,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943247,"byte_end":10943250,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943255,"byte_end":10943351,"line_start":803,"line_end":803,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943356,"byte_end":10943403,"line_start":804,"line_end":804,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943408,"byte_end":10943411,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943416,"byte_end":10943430,"line_start":806,"line_end":806,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943435,"byte_end":10943438,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943443,"byte_end":10943450,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943455,"byte_end":10943486,"line_start":809,"line_end":809,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943491,"byte_end":10943494,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943499,"byte_end":10943569,"line_start":811,"line_end":811,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943574,"byte_end":10943581,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944006,"byte_end":10944014,"line_start":830,"line_end":830,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943743,"byte_end":10943787,"line_start":819,"line_end":819,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943792,"byte_end":10943795,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943800,"byte_end":10943814,"line_start":821,"line_end":821,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943819,"byte_end":10943822,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943827,"byte_end":10943834,"line_start":823,"line_end":823,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943839,"byte_end":10943870,"line_start":824,"line_end":824,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943875,"byte_end":10943878,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943883,"byte_end":10943912,"line_start":826,"line_end":826,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943917,"byte_end":10943952,"line_start":827,"line_end":827,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943957,"byte_end":10943982,"line_start":828,"line_end":828,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10943987,"byte_end":10943994,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944403,"byte_end":10944406,"line_start":845,"line_end":845,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944173,"byte_end":10944254,"line_start":836,"line_end":836,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944259,"byte_end":10944262,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944267,"byte_end":10944281,"line_start":838,"line_end":838,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944286,"byte_end":10944289,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944294,"byte_end":10944301,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944306,"byte_end":10944337,"line_start":841,"line_end":841,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944342,"byte_end":10944345,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944350,"byte_end":10944379,"line_start":843,"line_end":843,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944384,"byte_end":10944391,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944745,"byte_end":10944749,"line_start":860,"line_end":860,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944507,"byte_end":10944588,"line_start":851,"line_end":851,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944593,"byte_end":10944596,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944601,"byte_end":10944615,"line_start":853,"line_end":853,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944620,"byte_end":10944623,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944628,"byte_end":10944635,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944640,"byte_end":10944671,"line_start":856,"line_end":856,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944676,"byte_end":10944679,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944684,"byte_end":10944721,"line_start":858,"line_end":858,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944726,"byte_end":10944733,"line_start":859,"line_end":859,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945170,"byte_end":10945181,"line_start":876,"line_end":876,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944841,"byte_end":10944890,"line_start":864,"line_end":864,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944895,"byte_end":10944898,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944903,"byte_end":10944917,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944922,"byte_end":10944925,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944930,"byte_end":10944937,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944942,"byte_end":10944990,"line_start":869,"line_end":869,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944995,"byte_end":10944998,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945003,"byte_end":10945032,"line_start":871,"line_end":871,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945037,"byte_end":10945067,"line_start":872,"line_end":872,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945072,"byte_end":10945105,"line_start":873,"line_end":873,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945110,"byte_end":10945117,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945122,"byte_end":10945158,"line_start":875,"line_end":875,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945501,"byte_end":10945504,"line_start":889,"line_end":889,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945293,"byte_end":10945339,"line_start":880,"line_end":880,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945344,"byte_end":10945347,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945352,"byte_end":10945366,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945371,"byte_end":10945374,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945379,"byte_end":10945386,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945391,"byte_end":10945422,"line_start":885,"line_end":885,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945427,"byte_end":10945430,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945435,"byte_end":10945477,"line_start":887,"line_end":887,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945482,"byte_end":10945489,"line_start":888,"line_end":888,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945977,"byte_end":10945985,"line_start":907,"line_end":907,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945600,"byte_end":10945690,"line_start":894,"line_end":894,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945695,"byte_end":10945733,"line_start":895,"line_end":895,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945738,"byte_end":10945741,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945746,"byte_end":10945760,"line_start":897,"line_end":897,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945765,"byte_end":10945768,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945773,"byte_end":10945780,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945785,"byte_end":10945816,"line_start":900,"line_end":900,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945821,"byte_end":10945824,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945829,"byte_end":10945858,"line_start":902,"line_end":902,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945863,"byte_end":10945890,"line_start":903,"line_end":903,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945895,"byte_end":10945921,"line_start":904,"line_end":904,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945926,"byte_end":10945953,"line_start":905,"line_end":905,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10945958,"byte_end":10945965,"line_start":906,"line_end":906,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":256},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10948447,"byte_end":10948453,"line_start":1010,"line_end":1010,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10948168,"byte_end":10948221,"line_start":1004,"line_end":1004,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10948222,"byte_end":10948225,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10948226,"byte_end":10948289,"line_start":1006,"line_end":1006,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10948290,"byte_end":10948293,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10948294,"byte_end":10948392,"line_start":1008,"line_end":1008,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10948393,"byte_end":10948435,"line_start":1009,"line_end":1009,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949624,"byte_end":10949630,"line_start":1059,"line_end":1059,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949105,"byte_end":10949165,"line_start":1042,"line_end":1042,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949170,"byte_end":10949173,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949178,"byte_end":10949192,"line_start":1044,"line_end":1044,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949197,"byte_end":10949200,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949205,"byte_end":10949212,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949217,"byte_end":10949273,"line_start":1047,"line_end":1047,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949278,"byte_end":10949322,"line_start":1048,"line_end":1048,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949327,"byte_end":10949330,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949335,"byte_end":10949364,"line_start":1050,"line_end":1050,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949369,"byte_end":10949399,"line_start":1051,"line_end":1051,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949404,"byte_end":10949432,"line_start":1052,"line_end":1052,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949437,"byte_end":10949440,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949445,"byte_end":10949475,"line_start":1054,"line_end":1054,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949480,"byte_end":10949514,"line_start":1055,"line_end":1055,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949519,"byte_end":10949551,"line_start":1056,"line_end":1056,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949556,"byte_end":10949563,"line_start":1057,"line_end":1057,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949568,"byte_end":10949612,"line_start":1058,"line_end":1058,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950007,"byte_end":10950011,"line_start":1076,"line_end":1076,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949791,"byte_end":10949822,"line_start":1066,"line_end":1066,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949827,"byte_end":10949830,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949835,"byte_end":10949849,"line_start":1068,"line_end":1068,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949854,"byte_end":10949857,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949862,"byte_end":10949869,"line_start":1070,"line_end":1070,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949874,"byte_end":10949906,"line_start":1071,"line_end":1071,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949911,"byte_end":10949914,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949919,"byte_end":10949953,"line_start":1073,"line_end":1073,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949958,"byte_end":10949983,"line_start":1074,"line_end":1074,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949988,"byte_end":10949995,"line_start":1075,"line_end":1075,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950617,"byte_end":10950624,"line_start":1098,"line_end":1098,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950126,"byte_end":10950168,"line_start":1083,"line_end":1083,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950173,"byte_end":10950176,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950181,"byte_end":10950195,"line_start":1085,"line_end":1085,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950200,"byte_end":10950203,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950208,"byte_end":10950215,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950220,"byte_end":10950276,"line_start":1088,"line_end":1088,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950281,"byte_end":10950325,"line_start":1089,"line_end":1089,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950330,"byte_end":10950333,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950338,"byte_end":10950365,"line_start":1091,"line_end":1091,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950370,"byte_end":10950400,"line_start":1092,"line_end":1092,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950405,"byte_end":10950450,"line_start":1093,"line_end":1093,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950455,"byte_end":10950493,"line_start":1094,"line_end":1094,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950498,"byte_end":10950544,"line_start":1095,"line_end":1095,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950549,"byte_end":10950556,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950561,"byte_end":10950605,"line_start":1097,"line_end":1097,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951998,"byte_end":10952003,"line_start":1136,"line_end":1136,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950724,"byte_end":10950753,"line_start":1103,"line_end":1103,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950758,"byte_end":10950761,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950766,"byte_end":10950844,"line_start":1105,"line_end":1105,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950849,"byte_end":10950852,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950857,"byte_end":10950869,"line_start":1107,"line_end":1107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950874,"byte_end":10950877,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950882,"byte_end":10950967,"line_start":1109,"line_end":1109,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950972,"byte_end":10950975,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10950980,"byte_end":10951071,"line_start":1111,"line_end":1111,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951076,"byte_end":10951125,"line_start":1112,"line_end":1112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951130,"byte_end":10951133,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951138,"byte_end":10951210,"line_start":1114,"line_end":1114,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951215,"byte_end":10951290,"line_start":1115,"line_end":1115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951295,"byte_end":10951298,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951303,"byte_end":10951396,"line_start":1117,"line_end":1117,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951401,"byte_end":10951494,"line_start":1118,"line_end":1118,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951499,"byte_end":10951537,"line_start":1119,"line_end":1119,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951542,"byte_end":10951545,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951550,"byte_end":10951564,"line_start":1121,"line_end":1121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951569,"byte_end":10951572,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951577,"byte_end":10951584,"line_start":1123,"line_end":1123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951589,"byte_end":10951638,"line_start":1124,"line_end":1124,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951643,"byte_end":10951687,"line_start":1125,"line_end":1125,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951692,"byte_end":10951695,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951700,"byte_end":10951730,"line_start":1127,"line_end":1127,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951735,"byte_end":10951765,"line_start":1128,"line_end":1128,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951770,"byte_end":10951804,"line_start":1129,"line_end":1129,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951809,"byte_end":10951821,"line_start":1130,"line_end":1130,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951826,"byte_end":10951863,"line_start":1131,"line_end":1131,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951868,"byte_end":10951873,"line_start":1132,"line_end":1132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951878,"byte_end":10951885,"line_start":1133,"line_end":1133,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951890,"byte_end":10951934,"line_start":1134,"line_end":1134,"column_start":5,"column_end":49}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10951939,"byte_end":10951979,"line_start":1135,"line_end":1135,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953314,"byte_end":10953323,"line_start":1178,"line_end":1178,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952109,"byte_end":10952138,"line_start":1141,"line_end":1141,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952143,"byte_end":10952146,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952151,"byte_end":10952237,"line_start":1143,"line_end":1143,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952242,"byte_end":10952245,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952250,"byte_end":10952262,"line_start":1145,"line_end":1145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952267,"byte_end":10952270,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952275,"byte_end":10952370,"line_start":1147,"line_end":1147,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952375,"byte_end":10952412,"line_start":1148,"line_end":1148,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952417,"byte_end":10952420,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952425,"byte_end":10952514,"line_start":1150,"line_end":1150,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952519,"byte_end":10952522,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952527,"byte_end":10952601,"line_start":1152,"line_end":1152,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952606,"byte_end":10952609,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952614,"byte_end":10952628,"line_start":1154,"line_end":1154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952633,"byte_end":10952636,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952641,"byte_end":10952648,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952653,"byte_end":10952702,"line_start":1157,"line_end":1157,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952707,"byte_end":10952751,"line_start":1158,"line_end":1158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952756,"byte_end":10952759,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952764,"byte_end":10952806,"line_start":1160,"line_end":1160,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952811,"byte_end":10952841,"line_start":1161,"line_end":1161,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952846,"byte_end":10952849,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952854,"byte_end":10952892,"line_start":1163,"line_end":1163,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952897,"byte_end":10952909,"line_start":1164,"line_end":1164,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952914,"byte_end":10952944,"line_start":1165,"line_end":1165,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952949,"byte_end":10952979,"line_start":1166,"line_end":1166,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10952984,"byte_end":10953025,"line_start":1167,"line_end":1167,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953030,"byte_end":10953048,"line_start":1168,"line_end":1168,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953053,"byte_end":10953097,"line_start":1169,"line_end":1169,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953102,"byte_end":10953107,"line_start":1170,"line_end":1170,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953112,"byte_end":10953115,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953120,"byte_end":10953154,"line_start":1172,"line_end":1172,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953159,"byte_end":10953171,"line_start":1173,"line_end":1173,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953176,"byte_end":10953228,"line_start":1174,"line_end":1174,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953233,"byte_end":10953238,"line_start":1175,"line_end":1175,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953243,"byte_end":10953250,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953255,"byte_end":10953295,"line_start":1177,"line_end":1177,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954705,"byte_end":10954711,"line_start":1215,"line_end":1215,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953441,"byte_end":10953481,"line_start":1183,"line_end":1183,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953486,"byte_end":10953489,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953494,"byte_end":10953589,"line_start":1185,"line_end":1185,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953594,"byte_end":10953597,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953602,"byte_end":10953614,"line_start":1187,"line_end":1187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953619,"byte_end":10953622,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953627,"byte_end":10953712,"line_start":1189,"line_end":1189,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953717,"byte_end":10953720,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953725,"byte_end":10953816,"line_start":1191,"line_end":1191,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953821,"byte_end":10953870,"line_start":1192,"line_end":1192,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953875,"byte_end":10953878,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953883,"byte_end":10953955,"line_start":1194,"line_end":1194,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10953960,"byte_end":10954035,"line_start":1195,"line_end":1195,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954040,"byte_end":10954043,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954048,"byte_end":10954141,"line_start":1197,"line_end":1197,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954146,"byte_end":10954239,"line_start":1198,"line_end":1198,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954244,"byte_end":10954282,"line_start":1199,"line_end":1199,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954287,"byte_end":10954290,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954295,"byte_end":10954309,"line_start":1201,"line_end":1201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954314,"byte_end":10954317,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954322,"byte_end":10954329,"line_start":1203,"line_end":1203,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954334,"byte_end":10954383,"line_start":1204,"line_end":1204,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954388,"byte_end":10954432,"line_start":1205,"line_end":1205,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954437,"byte_end":10954440,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954445,"byte_end":10954475,"line_start":1207,"line_end":1207,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954480,"byte_end":10954510,"line_start":1208,"line_end":1208,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954515,"byte_end":10954549,"line_start":1209,"line_end":1209,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954554,"byte_end":10954566,"line_start":1210,"line_end":1210,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954571,"byte_end":10954615,"line_start":1211,"line_end":1211,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954620,"byte_end":10954625,"line_start":1212,"line_end":1212,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954630,"byte_end":10954637,"line_start":1213,"line_end":1213,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954642,"byte_end":10954686,"line_start":1214,"line_end":1214,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955571,"byte_end":10955581,"line_start":1248,"line_end":1248,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954901,"byte_end":10954936,"line_start":1224,"line_end":1224,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954941,"byte_end":10954944,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954949,"byte_end":10954961,"line_start":1226,"line_end":1226,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954966,"byte_end":10954969,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10954974,"byte_end":10955033,"line_start":1228,"line_end":1228,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955038,"byte_end":10955041,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955046,"byte_end":10955058,"line_start":1230,"line_end":1230,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955063,"byte_end":10955066,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955071,"byte_end":10955158,"line_start":1232,"line_end":1232,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955163,"byte_end":10955196,"line_start":1233,"line_end":1233,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955201,"byte_end":10955204,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955209,"byte_end":10955223,"line_start":1235,"line_end":1235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955228,"byte_end":10955231,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955236,"byte_end":10955243,"line_start":1237,"line_end":1237,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955248,"byte_end":10955297,"line_start":1238,"line_end":1238,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955302,"byte_end":10955346,"line_start":1239,"line_end":1239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955351,"byte_end":10955354,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955359,"byte_end":10955389,"line_start":1241,"line_end":1241,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955394,"byte_end":10955406,"line_start":1242,"line_end":1242,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955411,"byte_end":10955453,"line_start":1243,"line_end":1243,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955458,"byte_end":10955496,"line_start":1244,"line_end":1244,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955501,"byte_end":10955530,"line_start":1245,"line_end":1245,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955535,"byte_end":10955540,"line_start":1246,"line_end":1246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955545,"byte_end":10955552,"line_start":1247,"line_end":1247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956190,"byte_end":10956193,"line_start":1267,"line_end":1267,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955733,"byte_end":10955779,"line_start":1253,"line_end":1253,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955784,"byte_end":10955787,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955792,"byte_end":10955806,"line_start":1255,"line_end":1255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955811,"byte_end":10955814,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955819,"byte_end":10955826,"line_start":1257,"line_end":1257,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955831,"byte_end":10955887,"line_start":1258,"line_end":1258,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955892,"byte_end":10955936,"line_start":1259,"line_end":1259,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955941,"byte_end":10955944,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10955949,"byte_end":10956011,"line_start":1261,"line_end":1261,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956016,"byte_end":10956046,"line_start":1262,"line_end":1262,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956051,"byte_end":10956085,"line_start":1263,"line_end":1263,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956090,"byte_end":10956117,"line_start":1264,"line_end":1264,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956122,"byte_end":10956129,"line_start":1265,"line_end":1265,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956134,"byte_end":10956178,"line_start":1266,"line_end":1266,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956916,"byte_end":10956924,"line_start":1291,"line_end":1291,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956289,"byte_end":10956379,"line_start":1272,"line_end":1272,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956384,"byte_end":10956422,"line_start":1273,"line_end":1273,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956427,"byte_end":10956430,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956435,"byte_end":10956449,"line_start":1275,"line_end":1275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956454,"byte_end":10956457,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956462,"byte_end":10956469,"line_start":1277,"line_end":1277,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956474,"byte_end":10956523,"line_start":1278,"line_end":1278,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956528,"byte_end":10956572,"line_start":1279,"line_end":1279,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956577,"byte_end":10956580,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956585,"byte_end":10956615,"line_start":1281,"line_end":1281,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956620,"byte_end":10956650,"line_start":1282,"line_end":1282,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956655,"byte_end":10956690,"line_start":1283,"line_end":1283,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956695,"byte_end":10956723,"line_start":1284,"line_end":1284,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956728,"byte_end":10956731,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956736,"byte_end":10956764,"line_start":1286,"line_end":1286,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956769,"byte_end":10956797,"line_start":1287,"line_end":1287,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956802,"byte_end":10956843,"line_start":1288,"line_end":1288,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956848,"byte_end":10956855,"line_start":1289,"line_end":1289,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10956860,"byte_end":10956904,"line_start":1290,"line_end":1290,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":327},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10959435,"byte_end":10959444,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":328}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10959386,"byte_end":10959423,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10959751,"byte_end":10959754,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10959711,"byte_end":10959739,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10959859,"byte_end":10959867,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10959802,"byte_end":10959847,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960535,"byte_end":10960546,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":344}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960487,"byte_end":10960523,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960657,"byte_end":10960660,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960611,"byte_end":10960631,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960636,"byte_end":10960645,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960798,"byte_end":10960807,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960729,"byte_end":10960772,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960777,"byte_end":10960786,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960963,"byte_end":10960972,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960881,"byte_end":10960937,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960942,"byte_end":10960951,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":432},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979860,"byte_end":10979865,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":433}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978144,"byte_end":10978193,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978194,"byte_end":10978197,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978198,"byte_end":10978211,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978212,"byte_end":10978215,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978216,"byte_end":10978295,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978296,"byte_end":10978299,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978300,"byte_end":10978307,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978308,"byte_end":10978341,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978342,"byte_end":10978345,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978346,"byte_end":10978444,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978445,"byte_end":10978537,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978538,"byte_end":10978568,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978569,"byte_end":10978576,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978577,"byte_end":10978580,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978581,"byte_end":10978657,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978658,"byte_end":10978661,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978662,"byte_end":10978689,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978690,"byte_end":10978693,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978694,"byte_end":10978781,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978782,"byte_end":10978798,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978799,"byte_end":10978802,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978803,"byte_end":10978810,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978811,"byte_end":10978860,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978861,"byte_end":10978905,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978906,"byte_end":10978909,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978910,"byte_end":10978948,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978949,"byte_end":10978978,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978979,"byte_end":10978982,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10978983,"byte_end":10979013,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979014,"byte_end":10979044,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979045,"byte_end":10979048,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979049,"byte_end":10979123,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979124,"byte_end":10979158,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979159,"byte_end":10979162,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979163,"byte_end":10979214,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979215,"byte_end":10979261,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979262,"byte_end":10979305,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979306,"byte_end":10979311,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979312,"byte_end":10979319,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979320,"byte_end":10979323,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979324,"byte_end":10979345,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979346,"byte_end":10979349,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979350,"byte_end":10979445,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979446,"byte_end":10979544,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979545,"byte_end":10979564,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979565,"byte_end":10979568,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979569,"byte_end":10979576,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979577,"byte_end":10979610,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979611,"byte_end":10979614,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979615,"byte_end":10979645,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979646,"byte_end":10979676,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979677,"byte_end":10979709,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979710,"byte_end":10979727,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979728,"byte_end":10979760,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979761,"byte_end":10979778,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979779,"byte_end":10979812,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979813,"byte_end":10979820,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979821,"byte_end":10979824,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979825,"byte_end":10979848,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10980840,"byte_end":10980845,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979924,"byte_end":10980013,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10980018,"byte_end":10980043,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10980048,"byte_end":10980051,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10980056,"byte_end":10980149,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10980154,"byte_end":10980242,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10980247,"byte_end":10980337,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10980342,"byte_end":10980382,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10980387,"byte_end":10980390,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10980395,"byte_end":10980485,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10980490,"byte_end":10980581,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10980586,"byte_end":10980673,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10980678,"byte_end":10980698,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10980703,"byte_end":10980706,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10980711,"byte_end":10980798,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10980803,"byte_end":10980828,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10985145,"byte_end":10985160,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981009,"byte_end":10981098,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981103,"byte_end":10981128,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981133,"byte_end":10981136,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981141,"byte_end":10981234,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981239,"byte_end":10981327,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981332,"byte_end":10981422,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981427,"byte_end":10981467,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981472,"byte_end":10981475,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981480,"byte_end":10981570,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981575,"byte_end":10981666,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981671,"byte_end":10981758,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981763,"byte_end":10981783,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981788,"byte_end":10981791,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981796,"byte_end":10981883,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981888,"byte_end":10981913,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981918,"byte_end":10981921,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981926,"byte_end":10981938,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981943,"byte_end":10981946,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10981951,"byte_end":10982043,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982048,"byte_end":10982135,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982140,"byte_end":10982152,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982157,"byte_end":10982160,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982165,"byte_end":10982172,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982177,"byte_end":10982210,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982215,"byte_end":10982218,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982223,"byte_end":10982253,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982258,"byte_end":10982285,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982290,"byte_end":10982302,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982307,"byte_end":10982382,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982387,"byte_end":10982426,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982431,"byte_end":10982467,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982472,"byte_end":10982483,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982488,"byte_end":10982493,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982498,"byte_end":10982505,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982510,"byte_end":10982513,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982518,"byte_end":10982612,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982617,"byte_end":10982648,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982653,"byte_end":10982656,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982661,"byte_end":10982756,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982761,"byte_end":10982853,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982858,"byte_end":10982947,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982952,"byte_end":10982955,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982960,"byte_end":10982973,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10982978,"byte_end":10983031,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983036,"byte_end":10983118,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983123,"byte_end":10983130,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983135,"byte_end":10983138,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983143,"byte_end":10983236,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983241,"byte_end":10983336,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983341,"byte_end":10983401,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983406,"byte_end":10983409,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983414,"byte_end":10983428,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983433,"byte_end":10983436,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983441,"byte_end":10983527,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983532,"byte_end":10983626,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983631,"byte_end":10983727,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983732,"byte_end":10983824,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983829,"byte_end":10983885,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983890,"byte_end":10983893,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983898,"byte_end":10983905,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983910,"byte_end":10983966,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10983971,"byte_end":10984015,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984020,"byte_end":10984023,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984028,"byte_end":10984059,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984064,"byte_end":10984067,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984072,"byte_end":10984149,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984154,"byte_end":10984185,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984190,"byte_end":10984193,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984198,"byte_end":10984228,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984233,"byte_end":10984263,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984268,"byte_end":10984271,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984276,"byte_end":10984353,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984358,"byte_end":10984430,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984435,"byte_end":10984438,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984443,"byte_end":10984464,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984469,"byte_end":10984529,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984534,"byte_end":10984616,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984621,"byte_end":10984637,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984642,"byte_end":10984721,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984726,"byte_end":10984769,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984774,"byte_end":10984842,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984847,"byte_end":10984939,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10984944,"byte_end":10985028,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10985033,"byte_end":10985070,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10985075,"byte_end":10985090,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10985095,"byte_end":10985104,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10985109,"byte_end":10985114,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10985119,"byte_end":10985126,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988747,"byte_end":10988760,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10985399,"byte_end":10985492,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10985497,"byte_end":10985549,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10985554,"byte_end":10985557,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10985562,"byte_end":10985655,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10985660,"byte_end":10985750,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10985755,"byte_end":10985844,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10985849,"byte_end":10985903,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10985908,"byte_end":10985911,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10985916,"byte_end":10986009,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986014,"byte_end":10986107,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986112,"byte_end":10986205,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986210,"byte_end":10986241,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986246,"byte_end":10986249,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986254,"byte_end":10986343,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986348,"byte_end":10986373,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986378,"byte_end":10986381,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986386,"byte_end":10986398,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986403,"byte_end":10986406,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986411,"byte_end":10986504,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986509,"byte_end":10986542,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986547,"byte_end":10986550,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986555,"byte_end":10986650,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986655,"byte_end":10986693,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986698,"byte_end":10986701,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986706,"byte_end":10986801,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986806,"byte_end":10986898,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986903,"byte_end":10986992,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10986997,"byte_end":10987000,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987005,"byte_end":10987018,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987023,"byte_end":10987076,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987081,"byte_end":10987140,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987145,"byte_end":10987152,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987157,"byte_end":10987160,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987165,"byte_end":10987259,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987264,"byte_end":10987351,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987356,"byte_end":10987416,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987421,"byte_end":10987424,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987429,"byte_end":10987443,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987448,"byte_end":10987451,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987456,"byte_end":10987542,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987547,"byte_end":10987641,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987646,"byte_end":10987742,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987747,"byte_end":10987839,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987844,"byte_end":10987900,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987905,"byte_end":10987908,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987913,"byte_end":10987920,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987925,"byte_end":10987981,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10987986,"byte_end":10988030,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988035,"byte_end":10988038,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988043,"byte_end":10988074,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988079,"byte_end":10988082,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988087,"byte_end":10988164,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988169,"byte_end":10988200,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988205,"byte_end":10988208,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988213,"byte_end":10988243,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988248,"byte_end":10988278,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988283,"byte_end":10988286,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988291,"byte_end":10988368,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988373,"byte_end":10988445,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988450,"byte_end":10988453,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988458,"byte_end":10988479,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988484,"byte_end":10988544,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988549,"byte_end":10988631,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988636,"byte_end":10988652,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988657,"byte_end":10988692,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988697,"byte_end":10988706,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988711,"byte_end":10988716,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988721,"byte_end":10988728,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989645,"byte_end":10989650,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988860,"byte_end":10988955,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988960,"byte_end":10988977,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988982,"byte_end":10988985,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10988990,"byte_end":10989084,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989089,"byte_end":10989181,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989186,"byte_end":10989254,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989259,"byte_end":10989262,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989267,"byte_end":10989359,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989364,"byte_end":10989367,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989372,"byte_end":10989386,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989391,"byte_end":10989394,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989399,"byte_end":10989406,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989411,"byte_end":10989444,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989449,"byte_end":10989452,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989457,"byte_end":10989487,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989492,"byte_end":10989517,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989522,"byte_end":10989586,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989591,"byte_end":10989598,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989603,"byte_end":10989621,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989626,"byte_end":10989633,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990812,"byte_end":10990817,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989774,"byte_end":10989825,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989830,"byte_end":10989833,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989838,"byte_end":10989928,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10989933,"byte_end":10990027,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990032,"byte_end":10990126,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990131,"byte_end":10990183,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990188,"byte_end":10990191,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990196,"byte_end":10990289,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990294,"byte_end":10990297,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990302,"byte_end":10990316,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990321,"byte_end":10990324,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990329,"byte_end":10990336,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990341,"byte_end":10990390,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990395,"byte_end":10990439,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990444,"byte_end":10990447,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990452,"byte_end":10990481,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990486,"byte_end":10990519,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990524,"byte_end":10990529,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990534,"byte_end":10990573,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990578,"byte_end":10990632,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990637,"byte_end":10990642,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990647,"byte_end":10990665,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990670,"byte_end":10990675,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990680,"byte_end":10990719,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990724,"byte_end":10990778,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990783,"byte_end":10990788,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990793,"byte_end":10990800,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10992144,"byte_end":10992155,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10990941,"byte_end":10991032,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991037,"byte_end":10991040,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991045,"byte_end":10991136,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991141,"byte_end":10991237,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991242,"byte_end":10991336,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991341,"byte_end":10991360,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991365,"byte_end":10991368,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991373,"byte_end":10991467,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991472,"byte_end":10991514,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991519,"byte_end":10991522,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991527,"byte_end":10991541,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991546,"byte_end":10991549,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991554,"byte_end":10991561,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991566,"byte_end":10991615,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991620,"byte_end":10991664,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991669,"byte_end":10991689,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991694,"byte_end":10991722,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991727,"byte_end":10991730,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991735,"byte_end":10991764,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991769,"byte_end":10991802,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991807,"byte_end":10991812,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991817,"byte_end":10991856,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991861,"byte_end":10991915,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991920,"byte_end":10991925,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10991930,"byte_end":10991997,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10992002,"byte_end":10992007,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10992012,"byte_end":10992051,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10992056,"byte_end":10992110,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10992115,"byte_end":10992120,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10992125,"byte_end":10992132,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993301,"byte_end":10993310,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10992760,"byte_end":10992815,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10992820,"byte_end":10992823,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10992828,"byte_end":10992903,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10992908,"byte_end":10992958,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10992963,"byte_end":10992966,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10992971,"byte_end":10993055,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993060,"byte_end":10993063,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993068,"byte_end":10993082,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993087,"byte_end":10993090,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993095,"byte_end":10993102,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993107,"byte_end":10993140,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993145,"byte_end":10993148,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993153,"byte_end":10993183,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993188,"byte_end":10993218,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993223,"byte_end":10993277,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993282,"byte_end":10993289,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":456},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996609,"byte_end":10996620,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993720,"byte_end":10993807,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993808,"byte_end":10993811,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993812,"byte_end":10993907,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993908,"byte_end":10993997,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993998,"byte_end":10994001,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994002,"byte_end":10994095,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994096,"byte_end":10994133,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994134,"byte_end":10994137,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994138,"byte_end":10994234,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994235,"byte_end":10994238,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994239,"byte_end":10994251,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994252,"byte_end":10994255,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994256,"byte_end":10994346,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994347,"byte_end":10994414,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994415,"byte_end":10994418,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994419,"byte_end":10994433,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994434,"byte_end":10994437,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994438,"byte_end":10994445,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994446,"byte_end":10994495,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994496,"byte_end":10994541,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994542,"byte_end":10994545,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994546,"byte_end":10994573,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994574,"byte_end":10994577,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994578,"byte_end":10994590,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994591,"byte_end":10994646,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994647,"byte_end":10994693,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994694,"byte_end":10994697,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994698,"byte_end":10994772,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994773,"byte_end":10994823,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994824,"byte_end":10994827,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994828,"byte_end":10994857,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994858,"byte_end":10994914,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994915,"byte_end":10994926,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994927,"byte_end":10994930,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10994931,"byte_end":10995012,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995013,"byte_end":10995018,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995019,"byte_end":10995026,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995027,"byte_end":10995030,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995031,"byte_end":10995125,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995126,"byte_end":10995129,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995130,"byte_end":10995224,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995225,"byte_end":10995310,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995311,"byte_end":10995314,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995315,"byte_end":10995414,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995415,"byte_end":10995513,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995514,"byte_end":10995534,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995535,"byte_end":10995538,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995539,"byte_end":10995546,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995547,"byte_end":10995596,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995597,"byte_end":10995628,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995629,"byte_end":10995674,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995675,"byte_end":10995678,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995679,"byte_end":10995700,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995701,"byte_end":10995731,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995732,"byte_end":10995737,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995738,"byte_end":10995741,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995742,"byte_end":10995762,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995763,"byte_end":10995793,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995794,"byte_end":10995824,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995825,"byte_end":10995830,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995831,"byte_end":10995834,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995835,"byte_end":10995866,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995867,"byte_end":10995895,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995896,"byte_end":10995916,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995917,"byte_end":10995953,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10995954,"byte_end":10996031,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996032,"byte_end":10996035,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996036,"byte_end":10996087,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996088,"byte_end":10996128,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996129,"byte_end":10996203,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996204,"byte_end":10996207,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996208,"byte_end":10996296,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996297,"byte_end":10996347,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996348,"byte_end":10996400,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996401,"byte_end":10996429,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996430,"byte_end":10996433,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996434,"byte_end":10996466,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996467,"byte_end":10996484,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996485,"byte_end":10996498,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996499,"byte_end":10996508,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996509,"byte_end":10996514,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996515,"byte_end":10996522,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996523,"byte_end":10996526,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996527,"byte_end":10996556,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996557,"byte_end":10996584,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996585,"byte_end":10996594,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":834},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","byte_start":12168193,"byte_end":12168196,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","byte_start":12168147,"byte_end":12168175,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","byte_start":12168176,"byte_end":12168185,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":836},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","byte_start":12168321,"byte_end":12168330,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","byte_start":12168252,"byte_end":12168303,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","byte_start":12168304,"byte_end":12168313,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":838},"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","byte_start":12168440,"byte_end":12168457,"line_start":34,"line_end":34,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/default.rs","byte_start":12168391,"byte_end":12168432,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10918402,"byte_end":10918420,"line_start":37,"line_end":37,"column_start":60,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10919598,"byte_end":10919606,"line_start":68,"line_end":68,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10923359,"byte_end":10923360,"line_start":182,"line_end":182,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926445,"byte_end":10926451,"line_start":280,"line_end":280,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926516,"byte_end":10926522,"line_start":281,"line_end":281,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926538,"byte_end":10926544,"line_start":283,"line_end":283,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926877,"byte_end":10926883,"line_start":298,"line_end":298,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":870},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":157},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938997,"byte_end":10939003,"line_start":645,"line_end":645,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10939350,"byte_end":10939356,"line_start":657,"line_end":657,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10939644,"byte_end":10939650,"line_start":665,"line_end":665,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10939997,"byte_end":10940003,"line_start":676,"line_end":676,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10940115,"byte_end":10940121,"line_start":682,"line_end":682,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10940516,"byte_end":10940522,"line_start":699,"line_end":699,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10940625,"byte_end":10940631,"line_start":705,"line_end":705,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10940751,"byte_end":10940757,"line_start":711,"line_end":711,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10941106,"byte_end":10941112,"line_start":726,"line_end":726,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10942325,"byte_end":10942330,"line_start":767,"line_end":767,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10942837,"byte_end":10942842,"line_start":790,"line_end":790,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944492,"byte_end":10944497,"line_start":850,"line_end":850,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10946167,"byte_end":10946172,"line_start":913,"line_end":913,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10946362,"byte_end":10946367,"line_start":922,"line_end":922,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10946645,"byte_end":10946650,"line_start":933,"line_end":933,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10946791,"byte_end":10946796,"line_start":939,"line_end":939,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10946989,"byte_end":10946994,"line_start":948,"line_end":948,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10947160,"byte_end":10947165,"line_start":955,"line_end":955,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10947255,"byte_end":10947260,"line_start":961,"line_end":961,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10947733,"byte_end":10947738,"line_start":980,"line_end":980,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10947848,"byte_end":10947853,"line_start":986,"line_end":986,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10947975,"byte_end":10947980,"line_start":992,"line_end":992,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10948086,"byte_end":10948091,"line_start":998,"line_end":998,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10948592,"byte_end":10948598,"line_start":1015,"line_end":1015,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10948772,"byte_end":10948778,"line_start":1024,"line_end":1024,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10948833,"byte_end":10948839,"line_start":1026,"line_end":1026,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949085,"byte_end":10949091,"line_start":1041,"line_end":1041,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949771,"byte_end":10949777,"line_start":1065,"line_end":1065,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10957069,"byte_end":10957075,"line_start":1296,"line_end":1296,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10957638,"byte_end":10957644,"line_start":1318,"line_end":1318,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10957771,"byte_end":10957777,"line_start":1324,"line_end":1324,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10957851,"byte_end":10957857,"line_start":1326,"line_end":1326,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10958022,"byte_end":10958028,"line_start":1332,"line_end":1332,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10958176,"byte_end":10958182,"line_start":1338,"line_end":1338,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10958485,"byte_end":10958491,"line_start":1349,"line_end":1349,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10958682,"byte_end":10958688,"line_start":1355,"line_end":1355,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10959507,"byte_end":10959516,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10959541,"byte_end":10959550,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10959572,"byte_end":10959581,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10959695,"byte_end":10959704,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10959946,"byte_end":10959955,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960153,"byte_end":10960162,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960290,"byte_end":10960299,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960473,"byte_end":10960482,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960593,"byte_end":10960604,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10961064,"byte_end":10961075,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10961222,"byte_end":10961233,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/deferred.rs","byte_start":10971171,"byte_end":10971179,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/deferred.rs","byte_start":10971303,"byte_end":10971311,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/epoch.rs","byte_start":10975158,"byte_end":10975163,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/epoch.rs","byte_start":10976918,"byte_end":10976929,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979912,"byte_end":10979917,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993435,"byte_end":10993440,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993610,"byte_end":10993615,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996899,"byte_end":10996911,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":10999943,"byte_end":10999946,"line_start":70,"line_end":70,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":10999956,"byte_end":10999959,"line_start":72,"line_end":72,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":11000886,"byte_end":11000889,"line_start":107,"line_end":107,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":11004167,"byte_end":11004170,"line_start":192,"line_end":192,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":11004569,"byte_end":11004572,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":11004998,"byte_end":11005007,"line_start":222,"line_end":222,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":11005017,"byte_end":11005026,"line_start":224,"line_end":224,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":11005701,"byte_end":11005707,"line_start":245,"line_end":245,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":11010693,"byte_end":11010698,"line_start":382,"line_end":382,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":11019218,"byte_end":11019223,"line_start":602,"line_end":602,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":11025213,"byte_end":11025218,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":11025354,"byte_end":11025359,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":11025865,"byte_end":11025869,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":11028421,"byte_end":11028425,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":11028957,"byte_end":11028961,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/queue.rs","byte_start":11038739,"byte_end":11038744,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/queue.rs","byte_start":11038781,"byte_end":11038786,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/queue.rs","byte_start":11038802,"byte_end":11038807,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":720},{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/queue.rs","byte_start":11044421,"byte_end":11044426,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10918402,"byte_end":10918420,"line_start":37,"line_end":37,"column_start":60,"column_end":78},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":65},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10919598,"byte_end":10919606,"line_start":68,"line_end":68,"column_start":32,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":40454},"to":{"krate":0,"index":76}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10923359,"byte_end":10923360,"line_start":182,"line_end":182,"column_start":23,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":103},"to":{"krate":0,"index":93}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926445,"byte_end":10926451,"line_start":280,"line_end":280,"column_start":59,"column_end":65},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926516,"byte_end":10926522,"line_start":281,"line_end":281,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926538,"byte_end":10926544,"line_start":283,"line_end":283,"column_start":9,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10926877,"byte_end":10926883,"line_start":298,"line_end":298,"column_start":29,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10938997,"byte_end":10939003,"line_start":645,"line_end":645,"column_start":44,"column_end":50},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10939350,"byte_end":10939356,"line_start":657,"line_end":657,"column_start":46,"column_end":52},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":8979}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10939644,"byte_end":10939650,"line_start":665,"line_end":665,"column_start":39,"column_end":45},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10939997,"byte_end":10940003,"line_start":676,"line_end":676,"column_start":41,"column_end":47},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10940115,"byte_end":10940121,"line_start":682,"line_end":682,"column_start":48,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10940516,"byte_end":10940522,"line_start":699,"line_end":699,"column_start":26,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10940625,"byte_end":10940631,"line_start":705,"line_end":705,"column_start":21,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10940751,"byte_end":10940757,"line_start":711,"line_end":711,"column_start":57,"column_end":63},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10941106,"byte_end":10941112,"line_start":726,"line_end":726,"column_start":28,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10942325,"byte_end":10942330,"line_start":767,"line_end":767,"column_start":44,"column_end":49},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":202},"to":{"krate":0,"index":198}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10942837,"byte_end":10942842,"line_start":790,"line_end":790,"column_start":9,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10944492,"byte_end":10944497,"line_start":850,"line_end":850,"column_start":29,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10946167,"byte_end":10946172,"line_start":913,"line_end":913,"column_start":38,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10946362,"byte_end":10946367,"line_start":922,"line_end":922,"column_start":44,"column_end":49},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10946645,"byte_end":10946650,"line_start":933,"line_end":933,"column_start":26,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10946791,"byte_end":10946796,"line_start":939,"line_end":939,"column_start":39,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":3091}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10946989,"byte_end":10946994,"line_start":948,"line_end":948,"column_start":42,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":3104}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10947160,"byte_end":10947165,"line_start":955,"line_end":955,"column_start":21,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10947255,"byte_end":10947260,"line_start":961,"line_end":961,"column_start":26,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10947733,"byte_end":10947738,"line_start":980,"line_end":980,"column_start":43,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":2479}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10947848,"byte_end":10947853,"line_start":986,"line_end":986,"column_start":46,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":2482}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10947975,"byte_end":10947980,"line_start":992,"line_end":992,"column_start":42,"column_end":47},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":2777}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10948086,"byte_end":10948091,"line_start":998,"line_end":998,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":202},"to":{"krate":2,"index":2780}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10948592,"byte_end":10948598,"line_start":1015,"line_end":1015,"column_start":39,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10948772,"byte_end":10948778,"line_start":1024,"line_end":1024,"column_start":38,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":2890}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10948833,"byte_end":10948839,"line_start":1026,"line_end":1026,"column_start":44,"column_end":50},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":256},"to":{"krate":0,"index":198}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949085,"byte_end":10949091,"line_start":1041,"line_end":1041,"column_start":13,"column_end":19},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10949771,"byte_end":10949777,"line_start":1065,"line_end":1065,"column_start":33,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10957069,"byte_end":10957075,"line_start":1296,"line_end":1296,"column_start":28,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":2786}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10957638,"byte_end":10957644,"line_start":1318,"line_end":1318,"column_start":62,"column_end":68},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":2531}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10957771,"byte_end":10957777,"line_start":1324,"line_end":1324,"column_start":36,"column_end":42},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":2536}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10957851,"byte_end":10957857,"line_start":1326,"line_end":1326,"column_start":63,"column_end":69},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":2578}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10958022,"byte_end":10958028,"line_start":1332,"line_end":1332,"column_start":37,"column_end":43},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":2567}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10958176,"byte_end":10958182,"line_start":1338,"line_end":1338,"column_start":44,"column_end":50},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10958485,"byte_end":10958491,"line_start":1349,"line_end":1349,"column_start":46,"column_end":52},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":8979}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/atomic.rs","byte_start":10958682,"byte_end":10958688,"line_start":1355,"line_end":1355,"column_start":41,"column_end":47},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":256},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10959507,"byte_end":10959516,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":327},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10959541,"byte_end":10959550,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":327},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10959572,"byte_end":10959581,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":327},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10959695,"byte_end":10959704,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10959946,"byte_end":10959955,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":327},"to":{"krate":2,"index":2501}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960153,"byte_end":10960162,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":327},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960290,"byte_end":10960299,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":327},"to":{"krate":2,"index":2531}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960473,"byte_end":10960482,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":327},"to":{"krate":2,"index":2536}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10960593,"byte_end":10960604,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10961064,"byte_end":10961075,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/collector.rs","byte_start":10961222,"byte_end":10961233,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/deferred.rs","byte_start":10971171,"byte_end":10971179,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":376},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/deferred.rs","byte_start":10971303,"byte_end":10971311,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/epoch.rs","byte_start":10975158,"byte_end":10975163,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/epoch.rs","byte_start":10976918,"byte_end":10976929,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10979912,"byte_end":10979917,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993435,"byte_end":10993440,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":432},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10993610,"byte_end":10993615,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":432},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/guard.rs","byte_start":10996899,"byte_end":10996911,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":457},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":10999943,"byte_end":10999946,"line_start":70,"line_end":70,"column_start":22,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":10999956,"byte_end":10999959,"line_start":72,"line_end":72,"column_start":6,"column_end":9},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":11000886,"byte_end":11000889,"line_start":107,"line_end":107,"column_start":18,"column_end":21},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":11004167,"byte_end":11004170,"line_start":192,"line_end":192,"column_start":15,"column_end":18},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":11004569,"byte_end":11004572,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":8962}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":11004998,"byte_end":11005007,"line_start":222,"line_end":222,"column_start":22,"column_end":31},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":785},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":11005017,"byte_end":11005026,"line_start":224,"line_end":224,"column_start":6,"column_end":15},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":11005701,"byte_end":11005707,"line_start":245,"line_end":245,"column_start":6,"column_end":12},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":11010693,"byte_end":11010698,"line_start":382,"line_end":382,"column_start":6,"column_end":11},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/internal.rs","byte_start":11019218,"byte_end":11019223,"line_start":602,"line_end":602,"column_start":27,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":577},"to":{"krate":0,"index":631}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":11025213,"byte_end":11025218,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":2858}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":11025354,"byte_end":11025359,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":11025865,"byte_end":11025869,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":11028421,"byte_end":11028425,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":796},"to":{"krate":2,"index":3115}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/list.rs","byte_start":11028957,"byte_end":11028961,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":636},"to":{"krate":2,"index":7383}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/queue.rs","byte_start":11038739,"byte_end":11038744,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":813},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/queue.rs","byte_start":11038781,"byte_end":11038786,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":813},"to":{"krate":2,"index":2880}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/queue.rs","byte_start":11038802,"byte_end":11038807,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/Jonathan/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.1/src/sync/queue.rs","byte_start":11044421,"byte_end":11044426,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":813},"to":{"krate":2,"index":3115}}]}